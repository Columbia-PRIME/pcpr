% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/root_pcp_na_nonneg_noncvx_LOD.R
\name{root_pcp_noncvx_nonnegL_na_lod}
\alias{root_pcp_noncvx_nonnegL_na_lod}
\title{Nonconvex nonnegative squareroot PCP function with missing values (NA) & LOD penalty}
\usage{
root_pcp_noncvx_nonnegL_na_lod(D, lambda, mu, r, LOD, verbose = FALSE)
}
\arguments{
\item{D}{The original dataset.}

\item{lambda}{The \code{lambda} parameter penalizes the proximal L1 gradient on the \code{S} matrix.}

\item{mu}{The \code{mu} parameter penalizes the error term.}

\item{r}{The \code{r} parameter specifies the desired rank.}

\item{LOD}{The LOD (limit of detection) may be a scalar, vector (\code{length(LOD) = ncol(D)}), or matrix (\code{dim(LOD) == dim(D)}).}

\item{verbose}{A logical indicating if you would like information on the number of iterations required to reach convergence printed. Optional, and by default \code{verbose = FALSE}.}
}
\value{
Returns two solution matrices, the low rank \code{L} matrix and the sparse \code{S} matrix.
}
\description{
\code{root_pcp_noncvx_nonnegL_na_lod} implements nonconvex \code{rootPCP} with a non-negativity constraint on
the \code{L} solution matrix and LOD-specific penalties. \cr \cr
It solved the following ADMM splitting problem: \cr \cr
min(L,S) \cr
1_{rank(L) <= r} + lambda * ||S||_1 + mu * ( sum_(ij observed) f((L+S)_ij, D_ij) )^0.5 + I[L>=0] \cr \cr
This is first transformed to the problem: \cr \cr
min(L1,L2,S,Z) \cr
1_{rank(L1) <= r} + lambda * ||S1||_1 + mu * ( sum_(ij observed) f(Z_ij,D_ij) )^0.5 + I[L3>=0] \cr \cr
s.t. L1 = L2; Z = P_obs[ L2 + S2]; L1 = L3 \cr \cr
The algorithm conducts ADMM splitting as (L1, S1, Z), (L2, S2, L3). \cr \cr
This version allows for missing values. \cr \cr
Use NA for missing entries in D. \cr \cr
Assume that the true L >= 0 & observations in D >= 0 \cr \cr
Use -1 for <LOD \cr \cr
LOD penalty: \cr \cr
f(x,y) = (x-y)^2 if y>0 \cr
       = (x-LOD)^2 if y=-1, x>LOD \cr
       = x^2 if y=-1, x<0 \cr
       = 0 otherwise
}
